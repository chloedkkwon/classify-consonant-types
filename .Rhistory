# Set directory
setwd('/Users/chloekwon/Desktop/projects/classify_consonant_types')
# Install/load packages
pkgs <- c("tidyverse", "yardstick", "rlang", "janitor",
"pROC", "scales", "effectsize", "rlang")
sapply(pkgs, function(p) if (!requireNamespace(p, quietly = TRUE)) stop(sprintf("Please install '%s'", p)))
library(tidyverse)
library(yardstick)
library(janitor)
library(pROC)
library(scales)
library(effectsize) # for cliff delta
library(rlang)
# Load data
inf_res <- read.csv('model/inference_results.csv') %>%
mutate(fname = str_remove(fname, "\\.wav$"))
meta <- read.csv('data/T_all.csv') # meta data (includes filenames, conditions, and acoustic features)
# Define columns & set as factor
print(colnames(inf_res))
truth_col <- "true_label"
pred_col <- "predicted_label"
prob_cols <- names(inf_res)[str_detect(names(inf_res), "^prob[_\\.]|[_\\.]prob$")]
classes <- sort(unique(c(inf_res[[truth_col]], inf_res[[pred_col]])))
inf_res <- inf_res %>%
mutate(
truth = factor(.data[[truth_col]], levels = classes),
pred  = factor(.data[[pred_col]],  levels = classes),
correct = as.integer(truth == pred)
)
combined <- inf_res %>%
left_join(meta, by="fname")
# Basic summary
cat("Rows:", nrow(inf_res), "\n")
cat("Classes:", paste(classes, collapse = ", "), "\n")
class_counts <- inf_res %>% count(truth, name = "n") %>% mutate(pct = n / sum(n))
print(class_counts)
# Accuracy metrics
calc_one_class <- function(cls) {
df <- inf_res %>%
mutate(
truth_bin = factor(truth == cls, levels = c(FALSE, TRUE)),
pred_bin  = factor(pred  == cls, levels = c(FALSE, TRUE))
)
tibble(
class     = cls,
precision = precision(df, truth = truth_bin, estimate = pred_bin, event_level = "second")$.estimate,
recall    = recall(   df, truth = truth_bin, estimate = pred_bin, event_level = "second")$.estimate,
f1        = f_meas(   df, truth = truth_bin, estimate = pred_bin, event_level = "second")$.estimate,
support   = sum(df$truth_bin == TRUE, na.rm = TRUE)
)
}
per_class_metrics <- map_dfr(classes, calc_one_class)
per_class_metrics
inf_res
colnames(inf_res)
df <- combined %>%
group_by(truth, pre_cat)
# Accuracy metrics
calc_one_class <- function(cls) {
df <- combined %>%
group_by(truth, pre_cat)
mutate(
truth_bin = factor(truth == cls, levels = c(FALSE, TRUE)),
pred_bin  = factor(pred  == cls, levels = c(FALSE, TRUE))
)
tibble(
class     = cls,
precision = precision(df, truth = truth_bin, estimate = pred_bin, event_level = "second")$.estimate,
recall    = recall(   df, truth = truth_bin, estimate = pred_bin, event_level = "second")$.estimate,
f1        = f_meas(   df, truth = truth_bin, estimate = pred_bin, event_level = "second")$.estimate,
support   = sum(df$truth_bin == TRUE, na.rm = TRUE)
)
}
per_class_metrics <- map_dfr(classes, calc_one_class)
colnames(combined)
df <- combined %>%
group_by(true_label, pre_cat)
# Accuracy metrics
calc_one_class <- function(cls) {
df <- combined %>%
group_by(true_label, pre_cat)
mutate(
truth_bin = factor(truth == cls, levels = c(FALSE, TRUE)),
pred_bin  = factor(pred  == cls, levels = c(FALSE, TRUE))
)
tibble(
class     = cls,
precision = precision(df, truth = truth_bin, estimate = pred_bin, event_level = "second")$.estimate,
recall    = recall(   df, truth = truth_bin, estimate = pred_bin, event_level = "second")$.estimate,
f1        = f_meas(   df, truth = truth_bin, estimate = pred_bin, event_level = "second")$.estimate,
support   = sum(df$truth_bin == TRUE, na.rm = TRUE)
)
}
per_class_metrics <- map_dfr(classes, calc_one_class)
colnames(inf_res)
colnames(combined)
inf_res <- inf_res %>%
mutate(
truth = factor(.data[[truth_col]], levels = classes),
pred  = factor(.data[[pred_col]],  levels = classes),
correct = as.integer(truth == pred)
)
combined <- inf_res %>%
left_join(meta, by="fname")
colnames(combined)
df <- combined %>%
group_by(truth, pre_cat)
# Accuracy metrics
calc_one_class <- function(cls) {
df <- combined %>%
group_by(truth, pre_cat)
mutate(
truth_bin = factor(truth == cls, levels = c(FALSE, TRUE)),
pred_bin  = factor(pred  == cls, levels = c(FALSE, TRUE))
)
tibble(
class     = cls,
precision = precision(df, truth = truth_bin, estimate = pred_bin, event_level = "second")$.estimate,
recall    = recall(   df, truth = truth_bin, estimate = pred_bin, event_level = "second")$.estimate,
f1        = f_meas(   df, truth = truth_bin, estimate = pred_bin, event_level = "second")$.estimate,
support   = sum(df$truth_bin == TRUE, na.rm = TRUE)
)
}
per_class_metrics <- map_dfr(classes, calc_one_class)
combined$truth
# Accuracy metrics
calc_one_class <- function(cls) {
df <- combined %>%
group_by(truth, pre_cat) %>%
mutate(
truth_bin = factor(truth == cls, levels = c(FALSE, TRUE)),
pred_bin  = factor(pred == cls, levels = c(FALSE, TRUE))
)
tibble(
class     = cls,
precision = precision(df, truth = truth_bin, estimate = pred_bin, event_level = "second")$.estimate,
recall    = recall(   df, truth = truth_bin, estimate = pred_bin, event_level = "second")$.estimate,
f1        = f_meas(   df, truth = truth_bin, estimate = pred_bin, event_level = "second")$.estimate,
support   = sum(df$truth_bin == TRUE, na.rm = TRUE)
)
}
per_class_metrics <- map_dfr(classes, calc_one_class)
per_class_metrics
# Accuracy metrics
calc_one_class <- function(cls) {
df <- combined %>%
group_by(truth, pre_cat) %>%
mutate(
truth_bin = factor(truth == cls, levels = c(FALSE, TRUE)),
pred_bin  = factor(pred == cls, levels = c(FALSE, TRUE))
)
tibble(
class     = cls,
precision = precision(df, truth = truth_bin, estimate = pred_bin, event_level = "second")$.estimate,
recall    = recall(   df, truth = truth_bin, estimate = pred_bin, event_level = "second")$.estimate,
f1        = f_meas(   df, truth = truth_bin, estimate = pred_bin, event_level = "second")$.estimate,
support   = sum(df$truth_bin == TRUE, na.rm = TRUE)
)
}
df <- inf_res %>%
mutate(
truth_bin = factor(truth == cls, levels = c(FALSE, TRUE)),
pred_bin  = factor(pred == cls, levels = c(FALSE, TRUE))
)
# Accuracy metrics
calc_one_class <- function(cls) {
df <- inf_res %>%
mutate(
truth_bin = factor(truth == cls, levels = c(FALSE, TRUE)),
pred_bin  = factor(pred == cls, levels = c(FALSE, TRUE))
)
tibble(
class     = cls,
precision = precision(df, truth = truth_bin, estimate = pred_bin, event_level = "second")$.estimate,
recall    = recall(   df, truth = truth_bin, estimate = pred_bin, event_level = "second")$.estimate,
f1        = f_meas(   df, truth = truth_bin, estimate = pred_bin, event_level = "second")$.estimate,
support   = sum(df$truth_bin == TRUE, na.rm = TRUE)
)
}
per_class_metrics <- map_dfr(classes, calc_one_class)
per_class_metrics
calc_one_class_by_precat <- function(cls) {
df <- combined %>%
mutate(
truth_bin = factor(truth == cls, levels = c(FALSE, TRUE)),
pred_bin  = factor(pred  == cls, levels = c(FALSE, TRUE))
) %>%
group_by(pre_cat)
yard <- list(
precision = precision(df, truth = truth_bin, estimate = pred_bin, event_level = "second"),
recall    = recall(   df, truth = truth_bin, estimate = pred_bin, event_level = "second"),
f1        = f_meas(   df, truth = truth_bin, estimate = pred_bin, event_level = "second")
)
reduce(yard, left_join, by = c("pre_cat")) %>%
transmute(
class = cls,
pre_cat,
precision = .estimate.x,
recall    = .estimate.y,
f1        = .estimate
) %>%
left_join(
combined %>% filter(truth == cls) %>% count(pre_cat, name = "support"),
by = "pre_cat"
)
}
per_class_by_precat <- map_dfr(classes, calc_one_class_by_precat)
per_class_by_precat
per_class_by_precat[per_class_by_precat$pre_cat != "O_V",]
0.85 + 0.837 + 0.67
2.356/3
0.876 + 0.978 + 0.87
2.724/3
